server:
  port: ${PORT:4080}

management:
  health:
    db:
      enabled: true
    defaults:
      enabled: true
    diskspace:
      enabled: true
  endpoint:
    health:
      enabled: true
      cache:
        time-to-live: 5s
      show-details: "always"
  security:
    enabled: false
  endpoints:
    health:
      sensitive: false
    web:
      base-path: /
      exposure:
        include: 'health'

#If you use a database then uncomment below lines and update db properties accordingly

spring:
  application:
    name: Orgnaisation Role Mapping Batch Service
  jackson:
    default-property-inclusion: NON_NULL
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    log_statement: all
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
  datasource:
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://${ORG_ROLE_MAPPING_SERVICE_POSTGRES_HOST:localhost}:${ORG_ROLE_MAPPING_SERVICE_POSTGRES_PORT:5456}/${ORG_ROLE_MAPPING_SERVICE_POSTGRES_DATABASE:org_role_mapping}${ORG_ROLE_MAPPING_SERVICE_DB_OPTIONS:}
    username: ${ORG_ROLE_MAPPING_SERVICE_POSTGRES_USER:orm}
    password: ${ORG_ROLE_MAPPING_SERVICE_POSTGRES_PASS:orm}
    properties:
      charSet: UTF-8
  batch:
    initialize-schema: never

get-expired-records: getExpiredRecords
delete-expired-records: deleteExpiredRecords
batchjob-name: deleteExpiredRecords